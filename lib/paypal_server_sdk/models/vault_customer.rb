# paypal_server_sdk
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PaypalServerSdk
  # This object represents a merchantâ€™s customer, allowing them to store contact
  # details, and track all payments associated with the same customer.
  class VaultCustomer < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The unique ID for a customer generated by PayPal.
    # @return [String]
    attr_accessor :id

    # The name of the party.
    # @return [Name]
    attr_accessor :name

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['name'] = 'name'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        name
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id: SKIP, name: SKIP)
      @id = id unless id == SKIP
      @name = name unless name == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      name = Name.from_hash(hash['name']) if hash['name']

      # Create object from extracted values.
      VaultCustomer.new(id: id,
                        name: name)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} id: #{@id}, name: #{@name}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} id: #{@id.inspect}, name: #{@name.inspect}>"
    end
  end
end
