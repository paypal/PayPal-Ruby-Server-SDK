# paypal_server_sdk
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PaypalServerSdk
  # CallBack Configuration that the merchant can provide to PayPal/Venmo.
  class CallbackConfiguration < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # An array of callback events merchant can subscribe to for the
    # corresponding callback url. The SHIPPING_ADDRESS callback event is
    # required.
    # @return [Array[CallbackEvents]]
    attr_accessor :callback_events

    # Merchant provided CallBack url.PayPal/Venmo will use this url to call the
    # merchant back when the events occur .PayPal/Venmo expects a secured url
    # usually in the https format.merchant can append the cart id or other
    # params part of the url as query or path params.
    # @return [String]
    attr_accessor :callback_url

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['callback_events'] = 'callback_events'
      @_hash['callback_url'] = 'callback_url'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(callback_events:, callback_url:)
      @callback_events = callback_events
      @callback_url = callback_url
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      callback_events =
        hash.key?('callback_events') ? hash['callback_events'] : nil
      callback_url = hash.key?('callback_url') ? hash['callback_url'] : nil

      # Create object from extracted values.
      CallbackConfiguration.new(callback_events: callback_events,
                                callback_url: callback_url)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} callback_events: #{@callback_events}, callback_url: #{@callback_url}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} callback_events: #{@callback_events.inspect}, callback_url:"\
      " #{@callback_url.inspect}>"
    end
  end
end
