# paypal_server_sdk
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PaypalServerSdk
  # The options that the payee or merchant offers to the payer to ship or pick
  # up their items.
  class OrderUpdateCallbackShippingOption < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # A unique ID that identifies a payer-selected shipping option.
    # @return [String]
    attr_accessor :id

    # A description that the payer sees, which helps them choose an appropriate
    # shipping option. For example, `Free Shipping`, `USPS Priority Shipping`,
    # `Expédition prioritaire USPS`, or `USPS yōuxiān fā huò`. Localize this
    # description to the payer's locale.
    # @return [String]
    attr_accessor :label

    # A classification for the method of purchase fulfillment.
    # @return [ShippingType]
    attr_accessor :type

    # The currency and amount for a financial transaction, such as a balance or
    # payment due.
    # @return [Money]
    attr_accessor :amount

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['label'] = 'label'
      @_hash['type'] = 'type'
      @_hash['amount'] = 'amount'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        type
        amount
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id:, label:, type: SKIP, amount: SKIP)
      @id = id
      @label = label
      @type = type unless type == SKIP
      @amount = amount unless amount == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : nil
      label = hash.key?('label') ? hash['label'] : nil
      type = hash.key?('type') ? hash['type'] : SKIP
      amount = Money.from_hash(hash['amount']) if hash['amount']

      # Create object from extracted values.
      OrderUpdateCallbackShippingOption.new(id: id,
                                            label: label,
                                            type: type,
                                            amount: amount)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} id: #{@id}, label: #{@label}, type: #{@type}, amount: #{@amount}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} id: #{@id.inspect}, label: #{@label.inspect}, type: #{@type.inspect},"\
      " amount: #{@amount.inspect}>"
    end
  end
end
