# paypal_server_sdk
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PaypalServerSdk
  # Customizes the payer experience during the approval process for payment with
  # PayPal. Note: Partners and Marketplaces might configure brand_name and
  # shipping_preference during partner account setup, which overrides the
  # request values.
  class PaypalWalletExperienceContext < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The label that overrides the business name in the PayPal account on the
    # PayPal site. The pattern is defined by an external party and supports
    # Unicode.
    # @return [String]
    attr_accessor :brand_name

    # The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the
    # language in which to localize the error-related strings, such as messages,
    # issues, and suggested actions. The tag is made up of the [ISO 639-2
    # language code](https://www.loc.gov/standards/iso639-2/php/code_list.php),
    # the optional [ISO-15924 script
    # tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166
    # alpha-2 country code](/api/rest/reference/country-codes/) or [M49 region
    # code](https://unstats.un.org/unsd/methodology/m49/).
    # @return [String]
    attr_accessor :locale

    # The location from which the shipping address is derived.
    # @return [PaypalWalletContextShippingPreference]
    attr_accessor :shipping_preference

    # The preference to display the contact information (buyerâ€™s shipping email
    # & phone number) on PayPal's checkout for easy merchant-buyer
    # communication.
    # @return [PaypalWalletContactPreference]
    attr_accessor :contact_preference

    # Describes the URL.
    # @return [String]
    attr_accessor :return_url

    # Describes the URL.
    # @return [String]
    attr_accessor :cancel_url

    # The type of landing page to show on the PayPal site for customer checkout.
    # @return [PaypalExperienceLandingPage]
    attr_accessor :landing_page

    # Configures a Continue or Pay Now checkout flow.
    # @return [PaypalExperienceUserAction]
    attr_accessor :user_action

    # The merchant-preferred payment methods.
    # @return [PayeePaymentMethodPreference]
    attr_accessor :payment_method_preference

    # CallBack Configuration that the merchant can provide to PayPal/Venmo.
    # @return [CallbackConfiguration]
    attr_accessor :order_update_callback_config

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['brand_name'] = 'brand_name'
      @_hash['locale'] = 'locale'
      @_hash['shipping_preference'] = 'shipping_preference'
      @_hash['contact_preference'] = 'contact_preference'
      @_hash['return_url'] = 'return_url'
      @_hash['cancel_url'] = 'cancel_url'
      @_hash['landing_page'] = 'landing_page'
      @_hash['user_action'] = 'user_action'
      @_hash['payment_method_preference'] = 'payment_method_preference'
      @_hash['order_update_callback_config'] = 'order_update_callback_config'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        brand_name
        locale
        shipping_preference
        contact_preference
        return_url
        cancel_url
        landing_page
        user_action
        payment_method_preference
        order_update_callback_config
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(
      brand_name: SKIP, locale: SKIP,
      shipping_preference: PaypalWalletContextShippingPreference::GET_FROM_FILE,
      contact_preference: PaypalWalletContactPreference::NO_CONTACT_INFO,
      return_url: SKIP, cancel_url: SKIP,
      landing_page: PaypalExperienceLandingPage::NO_PREFERENCE,
      user_action: PaypalExperienceUserAction::CONTINUE,
      payment_method_preference: PayeePaymentMethodPreference::UNRESTRICTED,
      order_update_callback_config: SKIP
    )
      @brand_name = brand_name unless brand_name == SKIP
      @locale = locale unless locale == SKIP
      @shipping_preference = shipping_preference unless shipping_preference == SKIP
      @contact_preference = contact_preference unless contact_preference == SKIP
      @return_url = return_url unless return_url == SKIP
      @cancel_url = cancel_url unless cancel_url == SKIP
      @landing_page = landing_page unless landing_page == SKIP
      @user_action = user_action unless user_action == SKIP
      unless payment_method_preference == SKIP
        @payment_method_preference =
          payment_method_preference
      end
      unless order_update_callback_config == SKIP
        @order_update_callback_config =
          order_update_callback_config
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      brand_name = hash.key?('brand_name') ? hash['brand_name'] : SKIP
      locale = hash.key?('locale') ? hash['locale'] : SKIP
      shipping_preference =
        hash['shipping_preference'] ||= PaypalWalletContextShippingPreference::GET_FROM_FILE
      contact_preference =
        hash['contact_preference'] ||= PaypalWalletContactPreference::NO_CONTACT_INFO
      return_url = hash.key?('return_url') ? hash['return_url'] : SKIP
      cancel_url = hash.key?('cancel_url') ? hash['cancel_url'] : SKIP
      landing_page =
        hash['landing_page'] ||= PaypalExperienceLandingPage::NO_PREFERENCE
      user_action = hash['user_action'] ||= PaypalExperienceUserAction::CONTINUE
      payment_method_preference =
        hash['payment_method_preference'] ||= PayeePaymentMethodPreference::UNRESTRICTED
      if hash['order_update_callback_config']
        order_update_callback_config = CallbackConfiguration.from_hash(hash['order_update_callback_config'])
      end

      # Create object from extracted values.
      PaypalWalletExperienceContext.new(brand_name: brand_name,
                                        locale: locale,
                                        shipping_preference: shipping_preference,
                                        contact_preference: contact_preference,
                                        return_url: return_url,
                                        cancel_url: cancel_url,
                                        landing_page: landing_page,
                                        user_action: user_action,
                                        payment_method_preference: payment_method_preference,
                                        order_update_callback_config: order_update_callback_config)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} brand_name: #{@brand_name}, locale: #{@locale}, shipping_preference:"\
      " #{@shipping_preference}, contact_preference: #{@contact_preference}, return_url:"\
      " #{@return_url}, cancel_url: #{@cancel_url}, landing_page: #{@landing_page}, user_action:"\
      " #{@user_action}, payment_method_preference: #{@payment_method_preference},"\
      " order_update_callback_config: #{@order_update_callback_config}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} brand_name: #{@brand_name.inspect}, locale: #{@locale.inspect},"\
      " shipping_preference: #{@shipping_preference.inspect}, contact_preference:"\
      " #{@contact_preference.inspect}, return_url: #{@return_url.inspect}, cancel_url:"\
      " #{@cancel_url.inspect}, landing_page: #{@landing_page.inspect}, user_action:"\
      " #{@user_action.inspect}, payment_method_preference: #{@payment_method_preference.inspect},"\
      " order_update_callback_config: #{@order_update_callback_config.inspect}>"
    end
  end
end
