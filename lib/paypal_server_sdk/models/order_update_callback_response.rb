# paypal_server_sdk
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PaypalServerSdk
  # Returns the updated shipping options for an order.
  class OrderUpdateCallbackResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The ID of the order.
    # @return [String]
    attr_accessor :id

    # This would contain shipping option and amount data at purchase unit level.
    # @return [ShippingOptionsPurchaseUnit]
    attr_accessor :purchase_units

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['purchase_units'] = 'purchase_units'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        purchase_units
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id: SKIP, purchase_units: SKIP)
      @id = id unless id == SKIP
      @purchase_units = purchase_units unless purchase_units == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      purchase_units = ShippingOptionsPurchaseUnit.from_hash(hash['purchase_units']) if
        hash['purchase_units']

      # Create object from extracted values.
      OrderUpdateCallbackResponse.new(id: id,
                                      purchase_units: purchase_units)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} id: #{@id}, purchase_units: #{@purchase_units}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} id: #{@id.inspect}, purchase_units: #{@purchase_units.inspect}>"
    end
  end
end
