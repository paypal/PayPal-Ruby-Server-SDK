# paypal_server_sdk
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PaypalServerSdk
  # The currency and amount for a financial transaction, such as a balance or
  # payment due.
  class Money < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The [three-character ISO-4217 currency
    # code](/api/rest/reference/currency-codes/) that identifies the currency.
    # @return [String]
    attr_accessor :currency_code

    # The value, which might be:<ul><li>An integer for currencies like `JPY`
    # that are not typically fractional.</li><li>A decimal fraction for
    # currencies like `TND` that are subdivided into thousandths.</li></ul>For
    # the required number of decimal places for a currency code, see [Currency
    # Codes](/api/rest/reference/currency-codes/).
    # @return [String]
    attr_accessor :value

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['currency_code'] = 'currency_code'
      @_hash['value'] = 'value'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(currency_code:, value:)
      @currency_code = currency_code
      @value = value
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      currency_code = hash.key?('currency_code') ? hash['currency_code'] : nil
      value = hash.key?('value') ? hash['value'] : nil

      # Create object from extracted values.
      Money.new(currency_code: currency_code,
                value: value)
    end
  end
end
